
// document.addEventListener('DOMContentLoaded', function() {
//   // –§–æ—Ä–º–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –≤—ñ–¥–≥—É–∫—É
//   document.getElementById('reviewForm').addEventListener('submit', async (event) => {
//     event.preventDefault();
//     const name = document.getElementById('name').value;
//     const reviewText = document.getElementById('review').value;

//     try {
//       const response = await fetch('/api/reviews/add', { // –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ URL '/api/reviews/add' –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
//         method: 'POST',
//         headers: {
//           'Content-Type': 'application/json',
//         },
//         body: JSON.stringify({ name, text: reviewText }),
//       });

//       if (response.ok) {
//         document.getElementById('successMessage').style.display = 'block';
//         document.getElementById('reviewForm').reset();
//         fetchApprovedReviews(); // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ –≤—ñ–¥–≥—É–∫—ñ–≤ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
//       } else {
//         console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –≤—ñ–¥–≥—É–∫—É:', response.statusText);
//       }
//     } catch (error) {
//       console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –≤—ñ–¥–≥—É–∫—É:', error);
//     }
//   });

//   // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ö–≤–∞–ª–µ–Ω–∏—Ö –≤—ñ–¥–≥—É–∫—ñ–≤
//   fetchApprovedReviews();
// });

// async function fetchApprovedReviews() {
//   try {
//     const response = await fetch('/api/reviews/approved'); // –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —â–æ API –º–∞—Ä—à—Ä—É—Ç '/api/reviews/approved' –ø—Ä–∞—Ü—é—î
//     if (!response.ok) throw new Error('Failed to fetch approved reviews');
    
//     const reviews = await response.json();

//     const reviewsContainer = document.getElementById('reviewsContainer');
//     reviewsContainer.innerHTML = ''; // –û—á–∏—â—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º –≤—ñ–¥–≥—É–∫—ñ–≤

//     reviews.forEach(review => {
//       const reviewElement = document.createElement('div');
//       reviewElement.classList.add('review');
//       reviewElement.innerHTML = `
//         <p><strong>üë§ –Ü–º'—è:</strong> ${review.name}</p>
//         <p class="review-text"><strong>üí¨ –í—ñ–¥–≥—É–∫:</strong> ${review.text}</p>
//       `;
//       reviewsContainer.appendChild(reviewElement);

//       const reviewText = reviewElement.querySelector('.review-text');

//       // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ", —è–∫—â–æ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–≤–∏—â—É—î –¥–≤–∞ —Ä—è–¥–∫–∏
//       if (reviewText.scrollHeight > 60) { // "60" –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –¥–≤–æ–º —Ä—è–¥–∫–∞–º
//         const readMoreButton = document.createElement('button');
//         readMoreButton.classList.add('read-more-btn');
//         readMoreButton.textContent = '–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ';

//         reviewElement.appendChild(readMoreButton);

//         // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ"
//         readMoreButton.addEventListener('click', function() {
//           // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—Å—ñ —ñ–Ω—à—ñ —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç—ñ –≤—ñ–¥–≥—É–∫–∏
//           document.querySelectorAll('.review-text.expanded').forEach(el => {
//             if (el !== reviewText) {
//               el.classList.remove('expanded');
//               el.nextElementSibling.textContent = '–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ';
//             }
//           });

//           // –ü–µ—Ä–µ–º–∏–∫–∞—î–º–æ –∫–ª–∞—Å "expanded" –¥–ª—è —Ç–µ–∫—Å—Ç—É
//           reviewText.classList.toggle('expanded');

//           // –ó–º—ñ–Ω—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
//           this.textContent = reviewText.classList.contains('expanded') ? '–ó–≥–æ—Ä–Ω—É—Ç–∏' : '–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ';
//         });
//       }
//     });
//   } catch (error) {
//     console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–≥—É–∫—ñ–≤:', error);
//   }
// }


document.addEventListener('DOMContentLoaded', function() {
  // –§–æ—Ä–º–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –≤—ñ–¥–≥—É–∫—É
  document.getElementById('reviewForm').addEventListener('submit', async (event) => {
    event.preventDefault();
    const name = document.getElementById('name').value;
    const reviewText = document.getElementById('review').value;

    try {
      const response = await fetch('/api/reviews/add', { // –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ URL '/api/reviews/add' –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ name, text: reviewText }),
      });

      if (response.ok) {
        document.getElementById('successMessage').style.display = 'block';
        document.getElementById('reviewForm').reset();
        fetchApprovedReviews(); // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ –≤—ñ–¥–≥—É–∫—ñ–≤ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
      } else {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –≤—ñ–¥–≥—É–∫—É:', response.statusText);
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –≤—ñ–¥–≥—É–∫—É:', error);
    }
  });

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ö–≤–∞–ª–µ–Ω–∏—Ö –≤—ñ–¥–≥—É–∫—ñ–≤
  fetchApprovedReviews();
});

async function fetchApprovedReviews() {
  try {
    const response = await fetch('/api/reviews/approved'); // –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —â–æ API –º–∞—Ä—à—Ä—É—Ç '/api/reviews/approved' –ø—Ä–∞—Ü—é—î
    if (!response.ok) throw new Error('Failed to fetch approved reviews');
    
    const reviews = await response.json();

    const reviewsContainer = document.getElementById('reviewsContainer');
    reviewsContainer.innerHTML = ''; // –û—á–∏—â—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º –≤—ñ–¥–≥—É–∫—ñ–≤

    reviews.forEach(review => {
      const reviewElement = document.createElement('div');
      reviewElement.classList.add('review');
      reviewElement.innerHTML = `
        <p><strong>üë§ –Ü–º'—è:</strong> ${review.name}</p>
        <p class="review-text"><strong>üí¨ –í—ñ–¥–≥—É–∫:</strong> ${review.text}</p>
        <button class="delete-btn">–í–∏–¥–∞–ª–∏—Ç–∏</button>
      `;
      reviewsContainer.appendChild(reviewElement);

      const reviewText = reviewElement.querySelector('.review-text');

      // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ", —è–∫—â–æ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–≤–∏—â—É—î –¥–≤–∞ —Ä—è–¥–∫–∏
      if (reviewText.scrollHeight > 60) { // "60" –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –¥–≤–æ–º —Ä—è–¥–∫–∞–º
        const readMoreButton = document.createElement('button');
        readMoreButton.classList.add('read-more-btn');
        readMoreButton.textContent = '–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ';

        reviewElement.appendChild(readMoreButton);

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ"
        readMoreButton.addEventListener('click', function() {
          // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—Å—ñ —ñ–Ω—à—ñ —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç—ñ –≤—ñ–¥–≥—É–∫–∏
          document.querySelectorAll('.review-text.expanded').forEach(el => {
            if (el !== reviewText) {
              el.classList.remove('expanded');
              el.nextElementSibling.textContent = '–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ';
            }
          });

          // –ü–µ—Ä–µ–º–∏–∫–∞—î–º–æ –∫–ª–∞—Å "expanded" –¥–ª—è —Ç–µ–∫—Å—Ç—É
          reviewText.classList.toggle('expanded');

          // –ó–º—ñ–Ω—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
          this.textContent = reviewText.classList.contains('expanded') ? '–ó–≥–æ—Ä–Ω—É—Ç–∏' : '–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ';
        });
      }

      // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í–∏–¥–∞–ª–∏—Ç–∏"
      const deleteButton = reviewElement.querySelector('.delete-btn');
      deleteButton.addEventListener('click', () => deleteReview(review.id, reviewElement));
    });
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–≥—É–∫—ñ–≤:', error);
  }
}

async function deleteReview(reviewId, reviewElement) {
  try {
    const response = await fetch(`/api/reviews/${reviewId}`, {
      method: 'DELETE'
    });

    if (response.ok) {
      // –í–∏–¥–∞–ª—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –≤—ñ–¥–≥—É–∫—É –∑ DOM –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
      reviewElement.remove();
      console.log('–í—ñ–¥–≥—É–∫ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ');
    } else {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –≤—ñ–¥–≥—É–∫—É:', response.statusText);
    }
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –≤—ñ–¥–≥—É–∫—É:', error);
  }
}
